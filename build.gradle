ext {
    springVersion = '4.2.4.RELEASE'
    bootVersion = '1.3.1.RELEASE'
    undertowVersion = '1.2.9.Final'
    jerseyVersion = '2.21'

    libraries = [
            springCore: "org.springframework:spring-context-support:${springVersion}",

            bootJersey: "org.springframework.boot:spring-boot-starter-jersey:${bootVersion}",
            servlets  : 'javax.servlet:javax.servlet-api:3.1.0',
            undertow  : "org.springframework.boot:spring-boot-starter-undertow:${bootVersion}",
            tomcat    : "org.springframework.boot:spring-boot-starter-tomcat:${bootVersion}",
            jetty     : "org.springframework.boot:spring-boot-starter-jetty:${bootVersion}",
            grizzly   : ["org.glassfish.jersey.containers:jersey-container-servlet:+",
                         "org.glassfish.jersey.media:jersey-media-json-jackson:+",
                         "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:+",
                         "org.glassfish.jersey.containers:jersey-container-grizzly2-http:+",

            ]
    ]

}

allprojects {

    apply plugin: 'java'

    repositories {
        mavenLocal()
        mavenCentral()
    }


    version = '1.0.0'

    configurations {
        all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-websocket'
        //all*.exclude group: 'org.springframework.boot', module: "spring-boot-starter-tomcat"
    }

}

/*configurations {
    testArtifacts
}
task testJar (type: Jar) {
    baseName = "${project.name}-test"
    from sourceSets.test.output
}
artifacts {
    testArtifacts testJar
}*/

configure(subprojects - project(':common')) {
    dependencies {
        compile project(':common')
        testCompile files(project(':common').sourceSets.test.output)
    }
}

configure(subprojects - project(':common') - project(':tomcat')) {
    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }
}



subprojects {
    buildscript {
        def v = "1.3.1.RELEASE"
        repositories {
            maven { url 'http://repo.spring.io/plugins-release' }
            mavenCentral()
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${v}") //TODO
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${v}")

        }
    }

    apply plugin: 'application'
    //apply plugin: 'spring-boot'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    dependencies {
        testCompile "org.springframework.boot:spring-boot-starter-test:${bootVersion}"
        testCompile "io.gatling.highcharts:gatling-charts-highcharts:2.1.7"
    }

    task createGradleWrapper(type: Wrapper) { gradleVersion = '2.10' }

    buildscript {
        repositories {
            mavenCentral()
        }

        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${bootVersion}")
        }


    }

}
